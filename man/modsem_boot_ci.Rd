% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boot_ci.R
\name{modsem_boot_ci}
\alias{modsem_boot_ci}
\title{Compute Bootstrap Confidence Intervals for modsem Estimates}
\usage{
modsem_boot_ci(est, boot, type = c("percent", "bc"))
}
\arguments{
\item{est}{An object containing parameter estimates from a \code{modsem} model,
typically produced by a call to a fitting function such as \code{modsem()}}

\item{boot}{A numeric matrix or data frame of bootstrap estimates, where each
column corresponds to a bootstrap replication and each row corresponds to a
model parameter.}

\item{type}{A character string specifying the type of confidence interval to
compute. Must be one of:
\itemize{
  \item \code{"percent"} — percentile-based bootstrap confidence intervals.
  \item \code{"bc"} — bias-corrected bootstrap confidence intervals.
}
Partial matching is supported, and the argument is case-insensitive.}
}
\value{
A matrix of class \code{"ModsemBootCi"} with one row per parameter and the
following columns:
\itemize{
  \item \code{0.5\%}, \code{2.5\%}, \code{5\%} — lower-tail quantiles.
  \item \code{Estimate} — original model estimate.
  \item \code{95\%}, \code{97.5\%}, \code{99.5\%} — upper-tail quantiles.
  \item \code{p-value} — bootstrap-based significance level.
}
The matrix has an attribute \code{"type"} indicating the CI method used (\code{"percent"} or \code{"bc"}).
}
\description{
This function computes bootstrap confidence intervals for parameter estimates
obtained from a \code{modsem} model object. It supports both percentile and
bias-corrected (BC) interval types.
}
\details{
For each parameter estimate in \code{est}, the function computes bootstrap
confidence intervals using either the \code{P_CI()} (percentile) or \code{BC_CI()}
(bias-corrected) method. The resulting object contains quantiles at
0.5\%, 2.5\%, 5\%, 95\%, 97.5\%, and 99.5\%, along with the original estimate
and corresponding bootstrap-derived p-value.

The function internally calls \code{modsem::modsem_coef()} to extract the vector of
parameter estimates from the \code{est} object.
}
\examples{
\dontrun{
library(modsem)

m1 <- "
  # Outer Model
  X =~ x1 + x2 +x3
  Y =~ y1 + y2 + y3
  Z =~ z1 + z2 + z3

  # Inner model
  Y ~ X + Z + X:Z
"

fit <- modsem(m1, oneInt, method = "lms")
boot <- bootstrap_modsem(fit, R = 250)

ci <- modsem_boot_ci(fit, boot, type = "bc")
print(ci)
}

}
